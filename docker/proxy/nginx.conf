user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 4096;
}

http {
    sendfile on;
    types_hash_max_size 4096;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 65;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  access  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_host" "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$http_cf_connecting_ip"';

    access_log /var/log/nginx/access.log access;
    error_log /var/log/nginx/error.log;
    gzip on;

    resolver 127.0.0.11  valid=60s  ipv6=off;

    ssl_certificate      /run/secrets/ssl_certificate.pem;
    ssl_certificate_key  /run/secrets/ssl_certificate_key.pem;
    ssl_session_cache shared:le_nginx_SSL:40m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    include /etc/nginx/upstream.conf;

    map $http_x_infuruff_no_limits $infuruff {
        $binary_remote_addr 1;
    }

    map $http_cf_connecting_ip $restake {
        165.22.250.116/32 1;
    }

    map $http_cf_connecting_ip $unknown {
        default $binary_remote_addr;
    }

    limit_req_zone $infuruff zone=infuruff:20m rate=500r/s;
    limit_req_zone $restake zone=restake:20m rate=100r/s;
    limit_req_zone $unknown zone=unknown:20m rate=100r/m;
    limit_req zone=unknown burst=150 nodelay;
    limit_req_status 429;
    limit_conn_status 429;

    # Status.
    server {
        listen 81;
        server_name localhost;
        access_log off;
        allow 127.0.0.1;
        allow 172.0.0.0/8;
        deny all;

        location /nginx_status {
            stub_status;
            server_tokens on;
        }
    }

    # Default.
    server {
        listen 443 ssl;
        server_name health.pupmos.network;

        location / {
            default_type application/json;
            return 200 '{"code":"1", "message": "Ok"}';
        }
    }

    # API.
    server {
        listen 443 ssl http2;
        server_name ~^api-(?<chain>.+)\.pupmos\.network$;

        proxy_hide_header 'Access-Control-Allow-Origin';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            set $pfilter "?pagination.count_total=false&";
            if ($args !~* pagination.limit){
                set $pfilter "${pfilter}pagination.limit=20&";
            }

            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://${chain}_api$uri$pfilter$args;
        }
    }

    # gRPC.
    server {
        listen 443 ssl http2;
        server_name ~^grpc-(?<chain>.+)\.pupmos\.network$;

        location / {
            grpc_pass grpc://${chain}_api_grpc;
        }
    }

    # RPC.
    server {
        listen 443 ssl http2;
        server_name ~^rpc-(?<chain>.+)\.pupmos\.network$;

        proxy_hide_header 'Access-Control-Allow-Origin';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            location ~* ^/genesis(.*) {
                deny all;
            }

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            location ~* ^/websocket/(.*) {
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                keepalive_timeout  86400;
            }

            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://${chain}_rpc/$1$is_args$args;
        }
    }
}
